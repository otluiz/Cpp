#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int checkNum(vector<int> &v, int n){
  int i = n;
  if (v[i] == v.size()){ // chegou ao fim do vetor
    cout << "Não encontrei duplicados..." << endl;
    return 0;
  }
  if (v[i] == v[i+1]){
    v.erase(v.begin()+1);
    return checkNum(v, n);
  }
  else{
    n++;
    return checkNum(v, n);
  }
  
  cout << "Ordenando valores não duplicados";
  for(int k = 0; k < v.size(); k++)
    cout << v[k] << " ";
  return 0;
}


int main(int argc, char *argv[])
{
  vector<int> v{2, 1, 3, 3, 5, 4, 4};
  cout << "O vetor tem os valores: \n";
  vector<int>::iterator it;
  it = v.begin();
  while(it < v.end()){
    cout << *it << endl;
    it++;
  }  
  

  checkNum(v, 0); // chama a função que remove valores duplicados
  
  sort(v.begin(), v.end()); // ordena os valores do vetor
  
  // O iterador "it" é para percorrer o vetor e listar seus componentes
  // O vetor v é inicializado: v.begin() e é percorrido até final: v.end()
  cout << "Os valores ordenados são: " << endl;
  //vector<int>::iterator it;
  it = v.begin();
  while(it < v.end()){
    cout << *it << endl;
    it++;
  }
  
  return 0;
}
